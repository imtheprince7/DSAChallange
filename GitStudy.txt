
 /*
    " Learning git command from Udemy: Telusko Course "

 */

 
git init :    Initialize the .git file in the source file , So Git can track ( Modified, Untracked, Added ) Basically Stagging 			
 	          Point in git storage.
 	  git init
 	   
 	   
git add :     Moving the particular file from the Local System ( Machine) to Git Server Adding that file to Git Server.
	add " fileName.ext"

git add (.):	"."  specify all the file in the directory rather than particular mention one by one Changed FIle manually.
	git add ."	
	
	
git commit:   Commit means we are changing the stage of added file ( Added -> Stagged ).
	  git commit -m  "message what you're updating"
	  
		
git diff:     This command show the difference between the file what you have modified the content in your local system 
	          compare to previous file ( Git Server ).
	git diff "fileName.ext"
	
	     	
diff --staged:     This command show the difference between the file what you have modified the content in your local system 
	               Compare to previous file ( Git Server ) during stagged , when you have commited your file to Git. 
	git diff -- staged "fileName.ext"
	
git rm: 	This command help us to completely remove the File from git server which we have accidently pushed but don't 	
		    Want to share to anyone.
	git rm --cached  "fileName.ext"


git push: 	THis command use to push the added File ->  Commit File-> ( Stagged file ) to final github's account. ( Like sync from local system to Server System) permanently.
			git push origin "branch-name"  ( git push origin main) : Origin :-> Origin meand the project URL



======================================================================================
		CREATE GIT Branch:

git checkout:    "checkout" command along with Git is used to create another branch rather than "main" branch.
		git checkout  -b "branch-name"
		git switch    -c "branch-name"

git branch:  "branch" command is used to check the total number of available branch rather than "main"
	   git branch
	   git branch --all   :Shows all the branch & also remote branch

------------ How to move one Branch to other Branch-------
git switch: 	"switch" commnad used to move one branch to other branch:
	   git switch "branch-name"



======================================================================================
		DELETE GIT Branch:
git branch -d:    -d comnnad used to delete the branch from the remote ( main-branch) 
		git branch -d "branch-name"



======================================================================================
			"""MERGE"""   GIT Branch:


git merge:  git "merge" used to merge the code of another branch to "MAIN" branch ( testing -> FinalProduct).
			Firstlt switch to "main-branch"  then perform this command to merge the feature-branach to main-branch.
		git merge "another-branch-name"






======================================================================================
			"""Time_Travel """   Lite-version:

git checkout: 	"checkout -b" command used in Time-Travel code.
				( IF we want to make lite version of the product and want to get all the code by the particular commit)
				( Then we use this command:		This Basically make "new- branch" and copy all the code till that. to new created-branch)

		git checkout -b  "new-branch-name"




======================================================================================
			"""Git_Stash """   
git stash:		If we want to save our work "WITHOUT COMMITING" and coming back to resume the work. then we have to do 
				Stash rather than commit to the working branch. ( we can switch the branch without commiting the task over remote.)

git stash apply: 	Once You back to your original "BRACNH" to resume your work. You have to hit " git stash apply" to start from resume stage.
	git stash apply